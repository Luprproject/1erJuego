{\rtf1\ansi\ansicpg1252\cocoartf2513
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;\f1\fnil\fcharset0 LucidaGrande;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx566\tx1133\tx1700\tx2267\tx2834\tx3401\tx3968\tx4535\tx5102\tx5669\tx6236\tx6803\pardirnatural\partightenfactor0

\f0\fs24 \cf0 <!DOCTYPE html>\
<html lang="es">\
<head>\
<meta charset="UTF-8">\
<meta name="viewport" content="width=device-width, initial-scale=1.0">\
<title>Juego HTML Mejorado con Niveles</title>\
<style>\
body \{\
  margin: 0;\
  overflow: hidden;\
  font-family: Arial, sans-serif;\
\}\
\
#gameCanvas \{\
  background-image: url('https://example.com/background.jpg');\
  background-size: cover;\
\}\
\
#gameMenu \{\
  position: absolute;\
  top: 50%;\
  left: 50%;\
  transform: translate(-50%, -50%);\
  text-align: center;\
  background-color: rgba(0,0,0,0.7);\
  padding: 20px;\
  border-radius: 10px;\
  color: white;\
\}\
\
#gameMenu button \{\
  margin: 10px;\
  padding: 10px 20px;\
  font-size: 16px;\
\}\
\
#levelDisplay, #scoreDisplay, #timerDisplay \{\
  position: absolute;\
  top: 10px;\
  font-size: 18px;\
  color: white;\
  background-color: rgba(0,0,0,0.5);\
  padding: 5px;\
  border-radius: 5px;\
\}\
\
#levelDisplay \{ left: 10px; \}\
#scoreDisplay \{ left: 120px; \}\
#timerDisplay \{ right: 10px; \}\
\
#touchControls \{\
  position: absolute;\
  bottom: 10px;\
  left: 50%;\
  transform: translateX(-50%);\
  display: none;\
\}\
\
#touchControls button \{\
  font-size: 24px;\
  margin: 0 10px;\
  padding: 10px 20px;\
\}\
</style>\
</head>\
<body>\
\
<div id="gameMenu">\
  <h1>Mi Juego Incre\'edble</h1>\
  <button id="startButton">Iniciar Juego</button>\
  <button id="instructionsButton">Instrucciones</button>\
</div>\
\
<canvas id="gameCanvas"></canvas>\
<div id="levelDisplay">Nivel: 1</div>\
<div id="scoreDisplay">Puntuaci\'f3n: 0</div>\
<div id="timerDisplay">Tiempo: 0s</div>\
\
<div id="touchControls">\
  <button id="leftButton">
\f1 \uc0\u8592 
\f0 </button>\
  <button id="rightButton">
\f1 \uc0\u8594 
\f0 </button>\
  <button id="upButton">
\f1 \uc0\u8593 
\f0 </button>\
  <button id="downButton">
\f1 \uc0\u8595 
\f0 </button>\
</div>\
\
<script>\
const canvas = document.getElementById('gameCanvas');\
const ctx = canvas.getContext('2d');\
const levelDisplay = document.getElementById('levelDisplay');\
const scoreDisplay = document.getElementById('scoreDisplay');\
const timerDisplay = document.getElementById('timerDisplay');\
const gameMenu = document.getElementById('gameMenu');\
const startButton = document.getElementById('startButton');\
const instructionsButton = document.getElementById('instructionsButton');\
const touchControls = document.getElementById('touchControls');\
\
let gameState = 'menu';\
let currentLevel = 1;\
let score = 0;\
let timer = 0;\
let timerInterval;\
\
// Ajustar el tama\'f1o del canvas al tama\'f1o de la ventana\
function resizeCanvas() \{\
  canvas.width = window.innerWidth;\
  canvas.height = window.innerHeight;\
\}\
\
window.addEventListener('resize', resizeCanvas);\
resizeCanvas();\
\
// Player object\
const player = \{\
  x: 100,\
  y: 100,\
  width: 30,\
  height: 30,\
  speed: 0,\
  maxSpeed: 5,\
  acceleration: 0.5,\
  deceleration: 0.3,\
  jumping: false,\
  jumpStrength: 10,\
  verticalVelocity: 0\
\};\
\
// Obstacle object\
const obstacle = \{\
  x: 250,\
  y: 150,\
  width: 50,\
  height: 50\
\};\
\
// Level settings\
const levelSpeeds = [5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20];\
const targetX = canvas.width - 50;\
\
// Load game assets\
const playerImage = new Image();\
playerImage.src = 'https://example.com/player.png';\
\
const obstacleImage = new Image();\
obstacleImage.src = 'https://example.com/obstacle.png';\
\
// Sound effects\
const jumpSound = new Audio('https://example.com/jump.mp3');\
const levelUpSound = new Audio('https://example.com/levelup.mp3');\
const gameOverSound = new Audio('https://example.com/gameover.mp3');\
\
// Background music\
const backgroundMusic = new Audio('https://example.com/background-music.mp3');\
backgroundMusic.loop = true;\
\
function drawPlayer() \{\
  ctx.drawImage(playerImage, player.x, player.y, player.width, player.height);\
\}\
\
function drawObstacle() \{\
  ctx.drawImage(obstacleImage, obstacle.x, obstacle.y, obstacle.width, obstacle.height);\
\}\
\
function update() \{\
  if (gameState !== 'playing') return;\
\
  ctx.clearRect(0, 0, canvas.width, canvas.height);\
\
  // Update player position\
  player.x += player.speed;\
  \
  // Apply gravity\
  player.verticalVelocity += 0.5;\
  player.y += player.verticalVelocity;\
\
  // Ground collision\
  if (player.y + player.height > canvas.height) \{\
    player.y = canvas.height - player.height;\
    player.verticalVelocity = 0;\
    player.jumping = false;\
  \}\
\
  // Obstacle collision\
  if (\
    player.x < obstacle.x + obstacle.width &&\
    player.x + player.width > obstacle.x &&\
    player.y < obstacle.y + obstacle.height &&\
    player.y + player.height > obstacle.y\
  ) \{\
    gameOver();\
  \}\
\
  drawPlayer();\
  drawObstacle();\
\
  // Check for level completion\
  if (player.x >= targetX) \{\
    nextLevel();\
  \}\
\
  requestAnimationFrame(update);\
\}\
\
function nextLevel() \{\
  currentLevel++;\
  player.x = 100;\
  player.y = 100;\
  levelDisplay.textContent = Nivel: $\{currentLevel\};\
  score += 100;\
  scoreDisplay.textContent = Puntuaci\'f3n: $\{score\};\
  levelUpSound.play();\
\
  if (currentLevel > levelSpeeds.length) \{\
    gameWon();\
  \} else \{\
    player.maxSpeed = levelSpeeds[currentLevel - 1];\
  \}\
\}\
\
function gameOver() \{\
  gameState = 'over';\
  clearInterval(timerInterval);\
  gameOverSound.play();\
  backgroundMusic.pause();\
  alert(\'a1Juego terminado! Tu puntuaci\'f3n final es: $\{score\});\
  resetGame();\
\}\
\
function gameWon() \{\
  gameState = 'won';\
  clearInterval(timerInterval);\
  levelUpSound.play();\
  backgroundMusic.pause();\
  alert(\'a1Felicidades! Has completado todos los niveles. Puntuaci\'f3n final: $\{score\});\
  resetGame();\
\}\
\
function resetGame() \{\
  currentLevel = 1;\
  score = 0;\
  timer = 0;\
  player.x = 100;\
  player.y = 100;\
  player.speed = 0;\
  player.maxSpeed = levelSpeeds[0];\
  levelDisplay.textContent = Nivel: $\{currentLevel\};\
  scoreDisplay.textContent = Puntuaci\'f3n: $\{score\};\
  timerDisplay.textContent = Tiempo: 0s;\
  gameMenu.style.display = 'block';\
\}\
\
function startGame() \{\
  gameState = 'playing';\
  gameMenu.style.display = 'none';\
  backgroundMusic.play();\
  timerInterval = setInterval(() => \{\
    timer++;\
    timerDisplay.textContent = Tiempo: $\{timer\}s;\
  \}, 1000);\
  update();\
\}\
\
startButton.addEventListener('click', startGame);\
\
instructionsButton.addEventListener('click', () => \{\
  alert('Usa las flechas del teclado para mover al jugador. Llega al final de cada nivel evitando los obst\'e1culos.');\
\});\
\
document.addEventListener('keydown', (event) => \{\
  if (gameState !== 'playing') return;\
\
  switch (event.key) \{\
    case 'ArrowLeft':\
      player.speed = Math.max(player.speed - player.acceleration, -player.maxSpeed);\
      break;\
    case 'ArrowRight':\
      player.speed = Math.min(player.speed + player.acceleration, player.maxSpeed);\
      break;\
    case 'ArrowUp':\
      if (!player.jumping) \{\
        player.jumping = true;\
        player.verticalVelocity = -player.jumpStrength;\
        jumpSound.play();\
      \}\
      break;\
  \}\
\});\
\
document.addEventListener('keyup', (event) => \{\
  if (event.key === 'ArrowLeft' || event.key === 'ArrowRight') \{\
    player.speed *= player.deceleration;\
  \}\
\});\
\
// Touch controls\
function setupTouchControls() \{\
  if ('ontouchstart' in window) \{\
    touchControls.style.display = 'block';\
    \
    document.getElementById('leftButton').addEventListener('touchstart', () => \{\
      player.speed = -player.maxSpeed;\
    \});\
    \
    document.getElementById('rightButton').addEventListener('touchstart', () => \{\
      player.speed = player.maxSpeed;\
    \});\
    \
    document.getElementById('upButton').addEventListener('touchstart', () => \{\
      if (!player.jumping) \{\
        player.jumping = true;\
        player.verticalVelocity = -player.jumpStrength;\
        jumpSound.play();\
      \}\
    \});\
    \
    ['leftButton', 'rightButton'].forEach(id => \{\
      document.getElementById(id).addEventListener('touchend', () => \{\
        player.speed = 0;\
      \});\
    \});\
  \}\
\}\
\
setupTouchControls();\
\
// Local Storage para guardar progreso\
function saveProgress() \{\
  localStorage.setItem('gameProgress', JSON.stringify(\{\
    level: currentLevel,\
    score: score,\
    time: timer\
  \}));\
\}\
\
function loadProgress() \{\
  const progress = JSON.parse(localStorage.getItem('gameProgress'));\
  if (progress) \{\
    currentLevel = progress.level;\
    score = progress.score;\
    timer = progress.time;\
    levelDisplay.textContent = Nivel: $\{currentLevel\};\
    scoreDisplay.textContent = Puntuaci\'f3n: $\{score\};\
    timerDisplay.textContent = Tiempo: $\{timer\}s;\
  \}\
\}\
\
// Guardar progreso cada 30 segundos\
setInterval(saveProgress, 30000);\
\
// Cargar progreso al iniciar\
loadProgress();\
</script>\
\
</body>\
</html>}